name: Windows Qt6 (MSYS2 UCRT64 MinGW)

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: UCRT64
          install: >-
            git
            zip
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-qt6-base
            mingw-w64-ucrt-x86_64-qt6-serialport
            mingw-w64-ucrt-x86_64-qt6-tools
            mingw-w64-ucrt-x86_64-qt6-imageformats
            mingw-w64-ucrt-x86_64-libb2
            mingw-w64-ucrt-x86_64-ntldd

      - name: Configure (CMake/Ninja)
        shell: msys2 {0}
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release --parallel

      - name: Bundle with windeployqt6
        shell: msys2 {0}
        run: |
          EXE="build/KeyboardEmulator.exe"
          test -f "$EXE" || (echo "EXE not found: $EXE" && exit 1)
          mkdir -p build/deploy
          windeployqt6 --release --dir build/deploy "$EXE"
          cp "$EXE" build/deploy/

      - name: Copy non-Qt runtime DLLs (ucrt64/bin via ntldd)
        shell: msys2 {0}
        run: |
          EXE="build/KeyboardEmulator.exe"
          DEP="build/deploy"
          mapfile -t FILES < <(find "$DEP" -type f \( -iname "*.exe" -o -iname "*.dll" \))
          FILES=("$EXE" "${FILES[@]}")

          TMP="$DEP/.deps.txt"
          : > "$TMP"

          for f in "${FILES[@]}"; do
            ntldd -R "$f" | awk '/\\ucrt64\\bin\\.*\.dll/ {print $3}' >> "$TMP" || true
          done

          sort -u "$TMP" | while read -r winpath; do
            upath="$(cygpath -u "$winpath")"
            base="$(basename "$upath")"
            if [ ! -f "$DEP/$base" ]; then
              cp "$upath" "$DEP/"
            fi
          done

          # упакуем в zip
          (cd build && zip -r KeyboardEmulator-windows-ucrt64.zip deploy)

      - name: Upload artifact (folder)
        uses: actions/upload-artifact@v4
        with:
          name: KeyboardEmulator-windows-ucrt64
          path: build/deploy

      - name: Upload artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: KeyboardEmulator-windows-ucrt64-zip
          path: build/KeyboardEmulator-windows-ucrt64.zip
